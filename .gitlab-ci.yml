stages: [prerequisites, build, test, deliver]

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "shceduled"
    - if: $CI_COMMIT_TAG != null

default:
  image: mcr.microsoft.com/dotnet/sdk:6.0

variables:
  BUILD_DIR: build
  DEPENDENCIES_DIR: dependencies
  IMAGE_BASE_NAME: "theatrical-plays-api-v2"
  IMAGE_PLATFORMS: "linux/amd64,linux/arm64"

# dotnet-restore:
#   stage: prerequisites
#   script:
#     - dotnet restore --use-lock-file --packages ${DEPENDENCIES_DIR}
#   cache: &dependencies_cache
#     key: "[Dependencies]: $CI_COMMIT_REF_SLUG"
#     paths: [$DEPENDENCIES_DIR]
#     policy: pull-push
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

dotnet-compile:
  stage: build
  # cache: 
  #   - <<: *dependencies_cache
  #     policy: pull
  script:
    - dotnet ${BUILD_COMMAND:-build} -o ${BUILD_DIR} #--no-restore
  #needs: [dotnet-restore]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG != null
      variables: 
        BUILD_COMMAND: "publish"

dotnet-test:
  stage: test
  # cache: 
  #   - <<: *dependencies_cache
  #     policy: pull
  script:
    - dotnet test -o ${BUILD_DIR} #--no-restore
  #needs: [dotnet-restore]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

docker-build:
  stage: deliver
  image: docker:25.0.3-alpine3.19
  services:
    - name: docker:25.0.3-dind-alpine3.19
      alias: docker
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker buildx create --platform ${IMAGE_PLATFORMS} --name ci-build --use
    - docker buildx build -f ${DOCKERFILE_DIR:-.}/${DOCKERFILE:-Dockerfile} --push --platform ${IMAGE_PLATFORMS} -t ${TAG} -t latest ${DOCKERFILE_DIR:-.}
  needs: [dotnet-compile]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables: 
        TAG: "candidate-build-${CI_PIPELINE_IID}"
    - if: $CI_COMMIT_TAG != null
      variables: 
        TAG: "$CI_COMMIT_TAG"

